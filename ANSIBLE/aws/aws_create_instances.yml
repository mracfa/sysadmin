---

- name: Create AWS resources
  hosts: instances
  connection: local
  gather_facts: no


  tasks:
  #- include_vars: aws_ec2_cred.yml
  - name: Change security group to add inbound rules (with group_name)
    ec2_group:
      name: "{{ item.0.name }}" 
      description: "{{ item.0.description }}"
      vpc_id: "{{ item.0.vpc_id }}"
      region: "{{ item.0.aws_region }}"
      purge_rules: no
      rules:
        - proto: "{{ item.1.proto }}" 
          from_port: "{{ item.1.from_port }}"
          to_port: "{{ item.1.to_port }}"
          group_name: "{{ item.1.group_name }}"
          rule_desc: "{{ item.1.rule_desc }}"
    when: "item.1.group_name is defined"
    with_subelements:
      - "{{ security_groups }}"
      - "firewall.inbound"

  - name: Change security group to add inbound rules (with cidr_ip)
    ec2_group:
      name: "{{ item.0.name }}" 
      description: "{{ item.0.description }}"
      vpc_id: "{{ item.0.vpc_id }}"
      region: "{{ item.0.aws_region }}"
      purge_rules: no
      rules:
        - proto: "{{ item.1.proto }}" 
          from_port: "{{ item.1.from_port }}"
          to_port: "{{ item.1.to_port }}"
          cidr_ip: "{{ item.1.cidr_ip }}"
          rule_desc: "{{ item.1.rule_desc }}"
    when: "item.1.cidr_ip is defined"
    with_subelements:
      - "{{ security_groups }}"
      - "firewall.inbound"


  - name: Change security group to add outbound rules 
    ec2_group:
      name: "{{ item.0.name }}"
      description: "{{ item.0.description }}"
      vpc_id: "{{ item.0.vpc_id }}"
      region: "{{ item.0.aws_region }}"
      purge_rules: no
      rules_egress:
        - proto: "{{ item.1.proto }}"
          from_port: "{{ item.1.from_port }}"
          to_port: "{{ item.1.to_port }}"
          cidr_ip: "{{ item.1.cidr_ip }}"
          rule_desc: "{{ item.1.rule_desc }}"
    with_subelements:
      - "{{ security_groups }}"
      - "firewall.outbound"

  - name: Create an EC2 instance
    ec2:
      key_name: "{{ item.key_name }}"
      region: "{{ item.aws_region }}"
      group: "{{ item.sec_group }}" 
      instance_type: "{{ item.instance_type }}"
      image: "{{ item.ami_id }}"
      wait: "{{ item.wait }}"
      exact_count: "{{ item.count }}"
      count_tag:
        Env: "{{ item.environment }}"
        Name: "{{ item.environment }}-{{ item.name }}"
      vpc_subnet_id: "{{ item.vpc_subnet_id }}"
      assign_public_ip: "{{ item.public_ip }}"
      instance_tags:
        Env: "{{ item.environment }}"
        Name: "{{ item.environment }}-{{ item.name }}"
    with_items: "{{ ec2_instances }}"

